// <auto-generated />
using System;
using Heimdall.Infrastracture.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Heimdall.Infrastracture.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Heimdall.Domain.GlucoseRecordDomain.GlucoseRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("DateTime")
                        .HasColumnName("DateRegistered");

                    b.Property<int>("GlucoseLevel")
                        .HasColumnType("int")
                        .HasColumnName("GlucoseLevel");

                    b.Property<string>("RegisteredAfter")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("RegisteredAfter");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.ToTable("GlucoseRecords", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
