// <auto-generated />
using System;
using Heimdall.Infrastracture.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Heimdall.Infrastracture.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230508074646_AddedGlucoseRecordTable")]
    partial class AddedGlucoseRecordTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Heimdall.Domain.ExceptionsDomain.Exception", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Application")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Application");

                    b.Property<DateTime>("DateThrown")
                        .HasColumnType("DateTime")
                        .HasColumnName("DateThrown");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Error");

                    b.Property<string>("MessageTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MessageTemplate");

                    b.HasKey("Id");

                    b.ToTable("Exceptional", (string)null);
                });

            modelBuilder.Entity("Heimdall.Domain.GlucoseRecordDomain.GlucoseRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Color");

                    b.Property<string>("DateRegistered")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DateRegistered");

                    b.Property<string>("GlucoseLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("GlucoseLevel");

                    b.HasKey("Id");

                    b.ToTable("GlucoseRecords", (string)null);
                });

            modelBuilder.Entity("Heimdall.Domain.UsersDomain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LastName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Password");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
